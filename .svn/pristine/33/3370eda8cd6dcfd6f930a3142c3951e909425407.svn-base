using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MongoDB.Driver;
using MongoDB.Driver.Builders;
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using MongoDB.Bson.Serialization.Options;

namespace Items {
    public class Weapon : Iitem, Iweapon {
        //Iitem
        public ObjectId Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public double Weight { get; set; }
        public ItemCondition CurrentCondition { get; set; }
        public ItemCondition MaxCondition { get; set; }
        public bool IsWearable { get; set; }
        public int MinimumLevel { get; set; }
        public Wearable WornOn { get; set; }
        public int Location { get; set; }
        public ItemType ItemType { get; set; }
        public bool IsMovable { get; set; }
        public string Owner { get; set; }

        //Iweapon
        public double MinDamage { get; set; }
        public double MaxDamage { get; set; }
        public double AttackSpeed { get; set; }
        public bool IsWieldable { get; set; }
        public double CurrentMinDamage { get; set; }
        public double CurrentMaxDamage { get; set; }
        
        //Contains what effects affect who and in which case
        [BsonDictionaryOptions(DictionaryRepresentation.ArrayOfDocuments)]
        public Dictionary<string, double> WieldEffects { get; set; }

        [BsonDictionaryOptions(DictionaryRepresentation.ArrayOfDocuments)]
        public Dictionary<string, double> TargetAttackEffects { get; set; }

        [BsonDictionaryOptions(DictionaryRepresentation.ArrayOfDocuments)]
        public Dictionary<string, double> PlayerAttackEffects { get; set; }

        #region Public Methods
        public void DeteriorateCondition() {
            //TODO: condition should affect item stats as well
            int newCondition = ((int)CurrentCondition) - 1;
            if (newCondition >= 0) { //otherwise it can't deteriorate any more and it's broken anyways
                CurrentCondition = (ItemCondition)newCondition;
            }
            Save();
        }

        public void ImproveCondition() {
            //this shouldn't return anything because items will decay over time with use....silently
            //TODO: condition should affect item stats as well
            int newCondition = ((int)CurrentCondition) + 1;
            if (newCondition <= (int)MaxCondition) { //can't go higher than the max
                CurrentCondition = (ItemCondition)newCondition;
                Save();
            }
            else {
                //this should probably return a string so that we can inform a player for example that it can't be repaired byeond its current point
                //or to what level it was repaired
            }
        }

        public void Save() {
            MongoUtils.MongoData.ConnectToDatabase();
            MongoDatabase db = MongoUtils.MongoData.GetDatabase("World");
            MongoCollection collection = db.GetCollection("Items");
            collection.Save<Weapon>(this);
        }

        //this method should return any bonuses or curses that will be applied to the player once equipped it
        public Dictionary<String, double> Wield() {
            Dictionary<string, double> result = new Dictionary<string, double>();
            return result;
        }

        public string Examine() {
            return "";
        }

        public Weapon() { }
        #endregion Public Methods
    }

    public enum WeaponType { BLADE, BLUNT, POLE } //a few type of weapons
}
